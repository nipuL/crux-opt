From caa0f6c623214231380c5ef0de91b53cc43d1e0b Mon Sep 17 00:00:00 2001
From: NeilBrown <neilb@suse.de>
Date: Wed, 29 Apr 2009 11:44:02 +1000
Subject: [PATCH] Fix gcc-4.4 compiler warning.

Apparently the dereferencing of a type-punned pointer breaks strict
aliasing rules.   And we wouldn't want to do that.
So just make a different array of the appropriate type and use memcpy.

Resolves-Debian-bug: 505375
Signed-off-by: NeilBrown <neilb@suse.de>
---
 bitmap.c |   28 +++++++++++++++-------------
 super1.c |   19 +++++++------------
 2 files changed, 22 insertions(+), 25 deletions(-)

diff --git a/bitmap.c b/bitmap.c
index 352be5d..5618087 100644
--- a/bitmap.c
+++ b/bitmap.c
@@ -270,6 +270,7 @@ int ExamineBitmap(char *filename, int brief, struct supertype *st)
 	int rv = 1;
 	char buf[64];
 	int swap;
+	__u32 uuid32[4];
 
 	info = bitmap_file_read(filename, brief, &st);
 	if (!info)
@@ -297,19 +298,20 @@ int ExamineBitmap(char *filename, int brief, struct supertype *st)
 #else
 		swap = 1;
 #endif
-	if (swap) {
-	printf("            UUID : %08x:%08x:%08x:%08x\n",
-					swapl(*(__u32 *)(sb->uuid+0)),
-					swapl(*(__u32 *)(sb->uuid+4)),
-					swapl(*(__u32 *)(sb->uuid+8)),
-					swapl(*(__u32 *)(sb->uuid+12)));
-	} else {
-	printf("            UUID : %08x:%08x:%08x:%08x\n",
-					*(__u32 *)(sb->uuid+0),
-					*(__u32 *)(sb->uuid+4),
-					*(__u32 *)(sb->uuid+8),
-					*(__u32 *)(sb->uuid+12));
-	}
+	memcpy(uuid32, sb->uuid, 16);
+	if (swap)
+		printf("            UUID : %08x:%08x:%08x:%08x\n",
+		       swapl(uuid32[0]),
+		       swapl(uuid32[1]),
+		       swapl(uuid32[2]),
+		       swapl(uuid32[3]));
+	else
+		printf("            UUID : %08x:%08x:%08x:%08x\n",
+		       uuid32[0],
+		       uuid32[1],
+		       uuid32[2],
+		       uuid32[3]);
+
 	printf("          Events : %llu\n", (unsigned long long)sb->events);
 	printf("  Events Cleared : %llu\n", (unsigned long long)sb->events_cleared);
 	printf("           State : %s\n", bitmap_state(sb->state));
diff --git a/super1.c b/super1.c
index 1342412..037c5eb 100644
--- a/super1.c
+++ b/super1.c
@@ -612,10 +612,8 @@ static int update_super1(struct supertype *st, struct mdinfo *info,
 
 		if ((rfd = open("/dev/urandom", O_RDONLY)) < 0 ||
 		    read(rfd, sb->device_uuid, 16) != 16) {
-			*(__u32*)(sb->device_uuid) = random();
-			*(__u32*)(sb->device_uuid+4) = random();
-			*(__u32*)(sb->device_uuid+8) = random();
-			*(__u32*)(sb->device_uuid+12) = random();
+			__u32 r[4] = {random(), random(), random(), random()};
+			memcpy(sb->device_uuid, r, 16);
 		}
 
 		sb->dev_roles[i] =
@@ -735,10 +733,8 @@ static int init_super1(struct supertype *st, mdu_array_info_t *info,
 	else {
 		if ((rfd = open("/dev/urandom", O_RDONLY)) < 0 ||
 		    read(rfd, sb->set_uuid, 16) != 16) {
-			*(__u32*)(sb->set_uuid) = random();
-			*(__u32*)(sb->set_uuid+4) = random();
-			*(__u32*)(sb->set_uuid+8) = random();
-			*(__u32*)(sb->set_uuid+12) = random();
+			__u32 r[4] = {random(), random(), random(), random()};
+			memcpy(sb->set_uuid, r, 16);
 		}
 		if (rfd >= 0) close(rfd);
 	}
@@ -912,11 +908,10 @@ static int write_init_super1(struct supertype *st,
 
 	if ((rfd = open("/dev/urandom", O_RDONLY)) < 0 ||
 	    read(rfd, sb->device_uuid, 16) != 16) {
-		*(__u32*)(sb->device_uuid) = random();
-		*(__u32*)(sb->device_uuid+4) = random();
-		*(__u32*)(sb->device_uuid+8) = random();
-		*(__u32*)(sb->device_uuid+12) = random();
+		__u32 r[4] = {random(), random(), random(), random()};
+		memcpy(sb->device_uuid, r, 16);
 	}
+	
 	if (rfd >= 0) close(rfd);
 	sb->events = 0;
 
-- 
1.6.2

